{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpC,IAAIC,EAAiB,EAErBH,EAAKI,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAIJ,WACE,MAAMC,EAAgBP,EAAKQ,SAASC,OAAOC,MAE3C,IAAIC,EAAaC,aAAY,KAC3B,OAAIT,KAAoBI,GAoBnB,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAiBhB,EAAKQ,SAASS,MAAMP,MACrCQ,EAAclB,EAAKQ,SAASW,KAAKT,MAGvCO,EAAQD,EAAiBE,EAAcA,GADvCE,EAAWjB,EAAiB,GAG5B,MAAMkB,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFP,EAAQ,C,SAAEM,E,MAAUH,IAEpBF,EAAO,C,SAAEK,E,MAAUH,GAAQ,GAE5BA,EAAM,IAhCJQ,MAAK,EAACL,SAAEA,EAAQH,MAAEA,MACjBnB,EAAA4B,OAAOC,QAAQ,uBAAqBP,QAAiBH,MAAU,IAEhEW,OAAM,EAACR,SAAEA,EAAQH,MAAEA,MAClBnB,EAAA4B,OAAOG,QAAQ,sBAAoBT,QAAeH,MAAU,SAGhEd,GAAkB,KAGlB2B,cAAcnB,QACdR,EAAiB,IAMvB,IAAuBiB,EAAUH,C,GAH5B,E,CAvBHc,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nlet promiseCounter = 0;\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  createPromises();\n}\n\nfunction createPromises() {\n  const amountInputEL = form.elements.amount.value;\n\n  let intervalId = setInterval(() => {\n    if (promiseCounter !== +amountInputEL) {\n      createPromise()\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      promiseCounter += 1;\n      return;\n    } else {\n      clearInterval(intervalId);\n      promiseCounter = 0;\n      return;\n    }\n  }, 0);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const timeoutInputEl = form.elements.delay.value;\n    const stepInputEl = form.elements.step.value;\n\n    position = promiseCounter + 1;\n    delay = timeoutInputEl - stepInputEl + stepInputEl * position;\n\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$promiseCounter","addEventListener","e","preventDefault","amountInputEL","elements","amount","value","intervalId","setInterval","Promise","resolve","reject","timeoutInputEl","delay","stepInputEl","step","position","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure","clearInterval","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.6e460472.js.map"}